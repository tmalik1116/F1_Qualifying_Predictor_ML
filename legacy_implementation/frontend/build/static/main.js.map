{"mappings":";;;;;;;;;;;;;;;ACGA,SAAS,mCAAa,KAAK;IACvB,SAAS;QACL,QAAQ,GAAG,CAAC;QACZ,MAAM,aAAa,CAAC;IACxB;IAEA,qBACI,gCAAC;QAAO,SAAS;QAAa,IAAG;QAAgB,WAAU;kBAAc;;AAEjF;AAEA,SAAS,oCAAc,KAAK;IACxB,SAAS;QACL,QAAQ,GAAG,CAAC;QACZ,MAAM,aAAa,CAAC;IACxB;IAEA,qBACI,gCAAC;QAAO,SAAS;QAAa,IAAG;QAAiB,WAAU;kBAAc;;AAElF;AAEA,SAAS,8BAAQ,KAAK;IAClB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qBAAO,EAAE,QAAQ,uBAAuB;IAEpE,MAAM,gBAAgB;QAClB,UAAU,CAAC;IACf;IAEA,IAAI;IACJ,IAAI,MAAM,IAAI,IAAI,UACd,wBAAU,gCAAC;kBAAI,cAAA,gCAAC;sBAAG;;;SAEnB,wBAAU,gCAAC;kBAAI,cAAA,gCAAC;sBAAG;;;IAIvB,qBACI,gCAAC;QAAI,IAAG;QAAe,WAAW,CAAC,aAAa,EAAE,SAAS,WAAW,GAAG,CAAC;kBACtE,cAAA,iCAAC;YAAI,WAAU;;gBACV,MAAM,IAAI,KAAK,0BAEZ,gCAAC;8BAAK;;gBAKT,MAAM,IAAI,KAAK,2BAEZ,gCAAC;8BAAK;;;;;AAQ1B;AAEA,SAAS;IAEL,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qBAAO,EAAE,OAAO,0CAA0C;IAEhG,MAAM,gBAAgB,CAAC;QACnB,QAAQ,GAAG,CAAC,yBAAyB,2BAA2B;QAChE,eAAe;IACnB;IAEF,qBACE,iCAAC;QAAI,WAAU;;0BACX,gCAAC;gBAAI,WAAU;;0BAGf,iCAAC;gBAAI,WAAU;;kCACX,gCAAC;wBAAG,WAAU;kCAAY;;kCAC1B,gCAAC;wBAAE,OAAO;4BAAE,WAAW;4BAAM,cAAc;wBAAM;kCAAG;;kCAEpD,gCAAC;wBAAI,WAAU;;kCAKf,gCAAC;wBAAQ,MAAM;;;;0BAEnB,gCAAC;gBAAI,WAAU;;;;AAGvB;IAEA,2CAAe;;;;ADvFf,MAAM,6BAAO,CAAA,GAAA,+CAAO,EAAE,UAAU,CAAC,SAAS,cAAc,CAAC,UAAU,sCAAsC;AAEzG,2BAAK,MAAM,eAAC,gCAAC,CAAA,GAAA,wCAAE","sources":["src/index.js","src/App.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"../build/static/styles.css\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\")); // Target the 'root' div in index.html\n\nroot.render(<App />);\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom/client';\n\nfunction DriverButton(props) {\n    function handleClick() {\n        console.log('Click');\n        props.toggleSubmenu('driver');\n    }\n    \n    return (\n        <button onClick={handleClick} id=\"driver-button\" className=\"main button\">Driver</button> \n    )\n}\n\nfunction SessionButton(props) {\n    function handleClick() {\n        console.log('Clicked');\n        props.toggleSubmenu('session');\n    }\n    \n    return (\n        <button onClick={handleClick} id=\"session-button\" className=\"main button\">Session</button> \n    )\n}\n\nfunction Submenu(props) {\n    const [isOpen, setIsOpen] = useState(false); // state for visibility\n\n    const toggleSubmenu = () => {\n        setIsOpen(!isOpen);\n    }\n\n    let content;\n    if (props.type == 'driver') {\n        content = <div><h1>Driver Menu</h1></div>;\n    }else{\n        content = <div><h1>Session Menu</h1></div>;\n    }\n\n    \n    return (\n        <div id=\"submenu-card\" className={`submenu-card ${isOpen ? 'active' : ''}`}> \n            <div className=\"submenu-content\">\n                {props.type === 'driver' && (\n\n                    <div>{content}</div>\n                    // put driver UI here \n                    // INPUT: driver, track, year\n                    // OUTPUT: predicted qualifying time\n                )}\n                {props.type === 'session' && (\n\n                    <div>{content}</div>\n                    // put session UI here\n                    // INPUT: track, year, weather (optional)\n                    // OUTPUT: predicted qualifying grid - times and positions\n                )}\n            </div>\n        </div>\n    )\n}\n\nfunction App(){\n\n    const [submenuType, setSubmenuType] = useState(null); // state for submenu type (driver/session)\n\n    const toggleSubmenu = (type) => {\n        console.log(\"toggleSubmenu called\"); // not working, investigate\n        setSubmenuType(type);\n    };\n    \n  return (\n    <div className=\"App\">\n        <div className=\"curb left\"></div>\n\n\n        <div className=\"content\">\n            <h1 className=\"display-1\">Formula 1 Qualif-AI</h1>\n            <p style={{ marginTop: '5%', marginBottom: '10%' }}>Predict Result For:</p>\n\n            <div className=\"row\">\n                {/* <DriverButton toggleSubmenu={toggleSubmenu} /> */}\n                {/* <SessionButton toggleSubmenu={toggleSubmenu} /> */}\n            </div>\n\n            <Submenu type={submenuType}/>\n        </div>\n        <div className=\"curb right\"></div>\n    </div>\n  );\n}\n\nexport default App;"],"names":[],"version":3,"file":"main.js.map"}